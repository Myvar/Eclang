//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.34209
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EcIDE.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EcIDE.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die using System;
        ///using ECLang;
        ///using System.Reflection;
        ///using System.IO;
        ///using System.Runtime.InteropServices;
        ///namespace Runtime
        ///{
        ///    
        ///    static class Program
        ///    {
        ///		public static Assembly _assembly;
        ///		public static Engine engine;
        ///		
        ///		[DllImport(&quot;kernel32.dll&quot;)]
        ///		static extern IntPtr GetConsoleWindow();
        ///
        ///		[DllImport(&quot;user32.dll&quot;)]
        ///		static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);
        ///
        ///		const int SW_HIDE = 0;
        ///		const int SW_SHOW = 5;
        ///
        ///        [STAThread]
        ///        static void M [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string BootStrapCode {
            get {
                return ResourceManager.GetString("BootStrapCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap gnome_edit_paste {
            get {
                object obj = ResourceManager.GetObject("gnome_edit_paste", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die name := ([_a-zA-Z](([_a-zA-Z0-9])?)+)
        ///value := (((([_a-zA-Z](([_a-zA-Z0-9])?)+(\.{0,})?(.*)?)|(&quot;\w{0,}&quot;)|((([+-]?)[0-9]+)(\.[0-9]+)?))( (.*))?)|(.*)|&lt;array&gt;|&lt;boolean&gt;|&lt;newobj&gt;)
        ///primitives := (number|byte|regex|object|string|bool|array|null|fuck)
        ///
        ///array := \[.*((,\s+.*)?)+\]
        ///bool := [tT]rue|[Ff]alse
        ///number := ((([+-]?)[0-9]+)(\.[0-9]+)?)
        ///byte := [0-255]
        ///regexp := /.+/g(?:[mi]+)?
        ///fuck := [+&lt;&gt;\[\].-]+
        ///
        ///ref := ref (?&lt;Name&gt;&lt;name&gt;)
        ///
        ///vardec := dec\s+(?&lt;Name&gt;&lt;name&gt;)\s+:\s+(?&lt;Type&gt;&lt;primitives&gt;)\s+=\s+(? [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string Grammar {
            get {
                return ResourceManager.GetString("Grammar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap license {
            get {
                object obj = ResourceManager.GetObject("license", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap notifications {
            get {
                object obj = ResourceManager.GetObject("notifications", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Properties2 {
            get {
                object obj = ResourceManager.GetObject("Properties2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap VSObject_Method {
            get {
                object obj = ResourceManager.GetObject("VSObject_Method", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
