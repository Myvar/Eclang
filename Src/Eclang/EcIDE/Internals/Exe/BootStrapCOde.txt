using System;
using ECLang;
using System.Reflection;
using System.IO;
using System.Runtime.InteropServices;
namespace Runtime
{
    
    static class Program
    {
		public static Assembly _assembly;
		public static Engine engine;
		
		[DllImport("kernel32.dll")]
		static extern IntPtr GetConsoleWindow();

		[DllImport("user32.dll")]
		static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);

		const int SW_HIDE = 0;
		const int SW_SHOW = 5;

        [STAThread]
        static void Main()
        {

			var handle = GetConsoleWindow();
            /*HideConsoleReplacePoint*/
			
			
				
				
				_assembly = Assembly.GetExecutingAssembly();
              
			    using (Stream resourceStream = _assembly.GetManifestResourceStream("./Build/Src/Main.ec"))
				{
					using (StreamReader reader = new StreamReader(resourceStream))
					{
						engine = new Engine();
						engine.Flag = Engine.ExecutanFlags.RamOptimized | Engine.ExecutanFlags.Strict;
						engine.Execute(reader.ReadToEnd());
						
					}
				}
			Console.ReadKey();
        }
		
		


    }
}
